1. 框架的搭建 ：3层架构，源码的设计模式分析，封装通用的工具类
2. 功能实现 ：热修复，界面的加载————layoutInfater，BitmapFactory图片压缩效果很差
3. 系统调优：app启动速度，对于用户体验很重要，线程调优，Handler service调优  OOM  安装包优化  界面渲染调优。
            Bitmap内存管理以及优化，UI卡顿分析，内存抖动，电量优化

4 UML : 统一的建模语言  时序图，类图 ，用例图   powerDeginer

5 三层架构：

    底层：每个项目都能用的一些通用封装，不包含任何的业务逻辑
            原则：1，不要嵌套，单一原则
                 2，最少的知识原则，使用者好不好用
                 3，前期尽量考虑周全，不要到中途重构
                 4，新增功能或者修改代码的时候，不到万不得已不要动原来的代码，只在原来的基础上去拓展，充分考虑拓展性

                   工具： Dialog-->CommonDialog
                         Activity-->BaseActivity
                         Http-->HttpEngine
                         NavigationBar

    中间层：与本项目业务逻辑相关的一些封装
            缓存用户信息，Http通用配置，业务层的BaseActivity，第三方的一些平台，分享，支付。。。


    业务逻辑层：处理与用户的一些交互，欢迎页，列表获取，直播，登录注册等等

    ----------------------
    IOC 反射加注解

